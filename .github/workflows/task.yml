name: Cron Task

on:
  schedule:
    - cron: "15 0/24 * * *"  # ÊØèÂ§© UTC 00:15 ÊâßË°å‰∏ÄÊ¨°

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

concurrency:
  group: cron-task
  cancel-in-progress: true

jobs:
  build:
    name: Build and Update Rules
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout current repository
        uses: actions/checkout@v5

      - name: üì• Checkout v2fly/domain-list-community
        uses: actions/checkout@v5
        with:
          repository: v2fly/domain-list-community
          path: v2fly-dataset

      - name: ‚öôÔ∏è Set up Go 1.25
        uses: actions/setup-go@v6
        with:
          go-version: "1.25"

      - name: üêç Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: üì¶ Create virtualenv and define PYTHON_EXEC
        shell: bash
        run: |
          python -m venv venv
          if [ -x "venv/bin/python" ]; then
            echo "PYTHON_EXEC=$(pwd)/venv/bin/python" >> $GITHUB_ENV
          else
            echo "PYTHON_EXEC=$(pwd)/venv/Scripts/python.exe" >> $GITHUB_ENV
          fi

      - name: üìö Install Python dependencies
        shell: bash
        run: |
          $PYTHON_EXEC -m pip install httpx

      - name: üß± Generate domain rules using Go
        shell: bash
        run: |
          cd v2fly-dataset
          go run ./ -exportlists "category-ads-all,cn,geolocation-!cn" -outputdir $GITHUB_WORKSPACE

      - name: üß™ Run post-processing Python scripts
        shell: bash
        run: |
          $PYTHON_EXEC .github/scripts/setup_adguard.py
          $PYTHON_EXEC .github/scripts/setup_v2fly.py
          $PYTHON_EXEC .github/scripts/setup_asn.py

      - name: ‚¨ÜÔ∏è Commit and push if changes
        shell: bash
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ruleset-*.conf || true
      
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to ruleset-*.conf. Skipping commit."
          else
            git commit -m "ci: auto-build"
            git push
          fi
